#!/bin/sh
#
# Pre-commit hook to prevent weakening code quality rules
# This hook blocks commits that modify critical configuration files
#
# To bypass in an emergency (requires conscious decision):
#   git commit --no-verify
#

# ANSI color codes
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Protected files that enforce code quality
PROTECTED_FILES="
CodeAnalysis.ruleset
Directory.Build.props
.editorconfig
"

# Check if any protected files are being modified
MODIFIED_PROTECTED_FILES=""
for file in $PROTECTED_FILES; do
    if git diff --cached --name-only | grep -q "^${file}$"; then
        MODIFIED_PROTECTED_FILES="${MODIFIED_PROTECTED_FILES}\n  - ${file}"
    fi
done

# If protected files are modified, block the commit
if [ -n "$MODIFIED_PROTECTED_FILES" ]; then
    echo "${RED}╔════════════════════════════════════════════════════════════════╗${NC}"
    echo "${RED}║  BLOCKED: Code Quality Configuration Change Detected          ║${NC}"
    echo "${RED}╚════════════════════════════════════════════════════════════════╝${NC}"
    echo ""
    echo "${YELLOW}The following protected files are being modified:${NC}"
    echo -e "$MODIFIED_PROTECTED_FILES"
    echo ""
    echo "${YELLOW}These files enforce code quality standards and should rarely change.${NC}"
    echo ""
    echo "Before modifying these files, ask yourself:"
    echo "  1. Is this change really necessary?"
    echo "  2. Am I weakening rules to avoid fixing legitimate issues?"
    echo "  3. Have I documented WHY this change is needed?"
    echo ""
    echo "If you must proceed:"
    echo "  1. Read CODE_QUALITY_RULES.md for the change process"
    echo "  2. Document your rationale in the commit message"
    echo "  3. Update CODE_QUALITY_RULES.md with the change"
    echo "  4. Use: ${YELLOW}git commit --no-verify${NC} (only if absolutely necessary)"
    echo ""
    echo "${RED}Commit blocked. Fix your code instead of weakening the rules.${NC}"
    echo ""
    exit 1
fi

# Allow commit if no protected files are modified
exit 0
